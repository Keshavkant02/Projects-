# GBM vs. Normal Brain RNA-seq Analysis

[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](REPLACE_WITH_YOUR_COLAB_LINK)


---

## 1. Introduction

This repository contains a Jupyter Notebook (`[YOUR_NOTEBOOK_FILENAME].ipynb`) detailing a bioinformatics workflow for analyzing RNA-sequencing (RNA-seq) data. The primary objective is to compare gene expression between Glioblastoma Multiforme (GBM) tumor samples and Normal brain tissue samples.

The analysis identifies **Differentially Expressed Genes (DEGs)** and performs **Gene Ontology (GO)** and **KEGG Pathway Enrichment Analysis** to understand the biological context of these expression changes.

---

## 2. Features & Workflow

The notebook implements the following key steps:

* **Environment Setup**: Installs and loads necessary Python (`pandas`, `numpy`, `mygene`, `rpy2`, `matplotlib`, `seaborn`) and R (`DESeq2`, `apeglm`, `clusterProfiler`, `edgeR`, organism DB) packages.
* **Configuration**: Centralized section to define input file paths, metadata column names, analysis thresholds, species information, and output filenames.
* **Data Loading**: Reads the user-provided raw gene count matrix and sample metadata file.
* **Preprocessing**: Includes:
    * Validation of essential metadata columns.
    * Rigorous matching and ordering of samples between count and metadata tables.
    * Filtering of genes with low counts across samples.
* **Normalization (Visualization)**: Calculates TMM-normalized CPM values using `edgeR` (primarily for visualization like heatmaps).
* **Differential Gene Expression (DGE)**:
    * Employs the `DESeq2` R package via `rpy2` for robust statistical analysis of count data.
    * Models counts using a negative binomial GLM, accounting for library size and dispersion.
    * Performs Wald testing to identify significant DEGs.
    * Applies `apeglm` for Log2 Fold Change (LFC) shrinkage, improving estimate reliability.
* **Gene ID Mapping**: Uses the `mygene` Python package to map various gene identifiers to Entrez IDs, required for `clusterProfiler`.
* **Enrichment Analysis**: Conducts Over-Representation Analysis (ORA) using `clusterProfiler` via `rpy2` to find enriched:
    * **GO Terms** (Biological Process specified, but configurable).
    * **KEGG Pathways**.
* **Visualization**: Generates key plots:
    * **Volcano Plot**: Illustrates DEGs based on statistical significance and fold change.
    * **Heatmap**: Shows expression patterns of top DEGs across samples (using scaled CPM).
    * **Dot Plots**: Visualizes top enriched GO terms and KEGG pathways (saved as PDF by R).

---

## 3. Repository Contents

* **`[YOUR_NOTEBOOK_FILENAME].ipynb`**: The main Jupyter / Google Colaboratory notebook file containing the complete analysis code and descriptive text.

**Note:** This repository likely only contains the notebook file, especially if pushed directly via Colab's 'Save a copy in GitHub' feature. The output files generated by running the notebook (e.g., `.csv` tables, `.png`/`.pdf` plots) are **not** typically included in the repository automatically and must be generated by executing the notebook.

---

## 4. Usage Instructions

1.  **Environment**: The recommended way to run this notebook is using **Google Colaboratory**. Click the 'Open in Colab' badge above or manually upload and open the `.ipynb` file at [colab.research.google.com](https://colab.research.google.com).

2.  **Data Requirements**: You need two files:
    * A **raw gene count matrix** (CSV or TSV): Genes as rows (with unique IDs in the first column/index), samples as columns, values are unnormalized integers.
    * A **metadata file** (CSV or TSV): Samples as rows, with columns for sample IDs (matching counts matrix columns) and experimental conditions/groups.

3.  **Configuration**: Before running, **carefully review and modify** the **Configuration cell** (Section 2 in the notebook):
    * Update `counts_file` and `metadata_file` paths to point to your data within the Colab environment (e.g., `/content/drive/MyDrive/data/counts.csv` if using Google Drive, or just `counts.csv` if uploaded directly).
    * Ensure `sample_id_col`, `condition_col`, `reference_level`, `treatment_level`, `target_species`, `kegg_organism_code`, etc., match your data exactly.

4.  **Execution**: Run the notebook cells sequentially from top to bottom (`Runtime` -> `Run all` or run cells individually).

5.  **Outputs**: The analysis will:
    * Print summaries and progress to the notebook output areas.
    * Generate output files (CSV tables for DGE/enrichment, PNG/PDF plots for visualizations) within the Colab environment's file system.
    * Download these generated files using the Colab file browser (folder icon on the left panel) for local use.

---

## 5. Dependencies

Key libraries used:

* **Python**: `pandas`, `numpy`, `mygene`, `rpy2` (`~=3.5`), `matplotlib`, `seaborn`, `scikit-learn`
* **R**: `BiocManager`, `DESeq2`, `apeglm`, `clusterProfiler`, `edgeR`, `AnnotationDbi`, and an organism-specific database (e.g., `org.Hs.eg.db` for human, determined based on `target_species` config).

*The notebook contains code cells designed to install these dependencies within the Colab environment automatically.*

---

## 6. License

[Optional: Specify your chosen license, e.g., MIT License. If unsure, you can omit or state 'License not specified'.]

```text
MIT License

Copyright (c) [YEAR] [YOUR_NAME]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
